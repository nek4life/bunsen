import pyramid_beaker
import pyramid_jinja2
import sqlahelper

from pyramid.config import Configurator
from sqlalchemy import engine_from_config

from {{package}}.models import initialize_sql

def main(global_config, **settings):
    """ This function returns a Pyramid WSGI application.
    """
    config = Configurator(settings=settings)
    
    # Configure Database Engine
    engine = engine_from_config(settings, 'sqlalchemy.')
    sqlahelper.add_engine(engine)

    # Configure Beaker Sessions and Caching
    session_factory = pyramid_beaker.session_factory_from_settings(settings)
    config.set_session_factory(session_factory)
    pyramid_beaker.set_cache_regions_from_settings(settings)

    # Configure Jinja2 Templates
    config.include("pyramid_jinja2")
    config.add_renderer('.html', pyramid_jinja2.renderer_factory)

    # Add Static Views
    config.add_static_view('static', '{{package}}:static')

    # Include Application Views such as custom Exception Views and Root-Relative
    # static asset views
    config.include('{{package}}.views.appconfig')

    # Include Routes
    config.include("{{package}}.routes")

    # Using config.scan() will search for decorators that supply further
    # configuration such as the @view_config and @subscriber decorators
    config.scan("{{package}}.views")
    config.scan("{{package}}.subscribers")

    # Initialize Database Tables
    initialize_sql()
    return config.make_wsgi_app()

